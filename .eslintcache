[{"/Users/rakanatoli/programing/it-incubator/JS Lessons/src/redux/state.ts":"1","/Users/rakanatoli/programing/it-incubator/JS Lessons/src/redux/currencyReducer.ts":"2","/Users/rakanatoli/programing/it-incubator/JS Lessons/src/containers/CurrencyExchangeContainer/CurrencyEContainer.tsx":"3","/Users/rakanatoli/programing/it-incubator/JS Lessons/src/lessons/lesson1/lesson1.tsx":"4","/Users/rakanatoli/programing/it-incubator/JS Lessons/src/redux/actions.ts":"5","/Users/rakanatoli/programing/it-incubator/JS Lessons/src/index.tsx":"6","/Users/rakanatoli/programing/it-incubator/JS Lessons/src/components/CurrencyExchange/CurrencyExchange.tsx":"7","/Users/rakanatoli/programing/it-incubator/JS Lessons/src/App.tsx":"8","/Users/rakanatoli/programing/it-incubator/JS Lessons/src/lessons/lesson3/Lesson3.tsx":"9","/Users/rakanatoli/programing/it-incubator/JS Lessons/src/lessons/lesson3/lesson_3.ts":"10"},{"size":286,"mtime":1609758966000,"results":"11","hashOfConfig":"12"},{"size":1814,"mtime":1648841860785,"results":"13","hashOfConfig":"12"},{"size":5401,"mtime":1648841395974,"results":"14","hashOfConfig":"12"},{"size":860,"mtime":1648802575490,"results":"15","hashOfConfig":"12"},{"size":1436,"mtime":1648837912536,"results":"16","hashOfConfig":"12"},{"size":319,"mtime":1609760060000,"results":"17","hashOfConfig":"12"},{"size":3871,"mtime":1609764934000,"results":"18","hashOfConfig":"12"},{"size":621,"mtime":1649699743040,"results":"19","hashOfConfig":"12"},{"size":1599,"mtime":1601713006000,"results":"20","hashOfConfig":"12"},{"size":666,"mtime":1651753232120,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kd88vp",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/rakanatoli/programing/it-incubator/JS Lessons/src/redux/state.ts",[],"/Users/rakanatoli/programing/it-incubator/JS Lessons/src/redux/currencyReducer.ts",[],"/Users/rakanatoli/programing/it-incubator/JS Lessons/src/containers/CurrencyExchangeContainer/CurrencyEContainer.tsx",["44","45","46"],"import React from 'react';\r\nimport CurrencyExchange from '../../components/CurrencyExchange/CurrencyExchange';\r\nimport {CurrencyState, CurrencyType, selectAllCurrencyState} from '../../redux/currencyReducer';\r\nimport {Dispatch} from 'redux';\r\nimport {\r\n    ChangeActionAC,\r\n    ChangeCurrencyFieldAC,\r\n    ChangeCurrentCurrencyAC,\r\n    CurrencyReducersTypes\r\n} from '../../redux/actions';\r\nimport {connect, ConnectedProps, useDispatch, useSelector} from 'react-redux';\r\n\r\n// const CurrencyEContainer: React.FC<TProps> = props => {\r\nconst CurrencyEContainer: React.FC = () => {\r\n\r\n    // const {\r\n    //     currencies,\r\n    //     currentCurrency,\r\n    //     isBuying,\r\n    //     amountOfBYN,\r\n    //     amountOfCurrency,\r\n    //     setCurrencyAmount,\r\n    //     setAction,\r\n    //     changeCurrency,\r\n    // } = props;\r\n    // const {\r\n    //     currencies,\r\n    //     currentCurrency,\r\n    //     isBuying,\r\n    //     amountOfBYN,\r\n    //     amountOfCurrency,\r\n    // } = props;\r\n\r\n    const dispatch = useDispatch<Dispatch<CurrencyReducersTypes>>();\r\n    const {currentCurrency, amountOfCurrency, amountOfBYN, currencies , isBuying}=useSelector(selectAllCurrencyState)\r\n\r\n    let currencyRate: number = 0;\r\n    const currenciesName = currencies.map((currency: CurrencyType) => {\r\n        if (currency.currencyName === currentCurrency) {\r\n            currencyRate = isBuying ? currency.buyRate : currency.sellRate;\r\n        }\r\n        return currency.currencyName;\r\n    });\r\n\r\n    const changeCurrencyField = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = e.currentTarget.value;\r\n        if (!isFinite(+value)) return;\r\n        if (e.currentTarget.dataset.currency) {\r\n            const trigger: string = e.currentTarget.dataset.currency;\r\n            if (trigger === 'byn') {\r\n                if (value === '') {\r\n                    // setCurrencyAmount(value, value);\r\n                    dispatch(ChangeCurrencyFieldAC(value, value));\r\n                } else {\r\n                    // setCurrencyAmount(value, (+Number(value).toFixed(2) / currencyRate).toFixed(2));\r\n                    dispatch(ChangeCurrencyFieldAC(value, (+Number(value).toFixed(2) / currencyRate).toFixed(2)));\r\n                }\r\n            } else {\r\n                if (value === '') {\r\n                    // setCurrencyAmount(value, value);\r\n                    dispatch(ChangeCurrencyFieldAC(value, value));\r\n                } else {\r\n                    // setCurrencyAmount((+Number(value).toFixed(2) * currencyRate).toFixed(2), value);\r\n                    dispatch(ChangeCurrencyFieldAC((+Number(value).toFixed(2) * currencyRate).toFixed(2), value));\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const changeAction = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n        // e.currentTarget.dataset.action === 'buy' ? setAction(true) : setAction(false);\r\n        // e.currentTarget.dataset.action === 'buy' ? ChangeActionAC(true) : ChangeActionAC(false);\r\n        e.currentTarget.dataset.action === 'buy' ? dispatch(ChangeActionAC(true)) : ChangeActionAC((false));\r\n    };\r\n\r\n    const changeCurrentCurrency = (e: React.MouseEvent<HTMLLIElement>) => {\r\n        // e.currentTarget.dataset.currency && changeCurrency(e.currentTarget.dataset.currency);\r\n        // e.currentTarget.dataset.currency && ChangeCurrentCurrencyAC(e.currentTarget.dataset.currency);\r\n        e.currentTarget.dataset.currency && dispatch(ChangeCurrentCurrencyAC(e.currentTarget.dataset.currency));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CurrencyExchange\r\n                currenciesName={currenciesName}\r\n                currentCurrency={currentCurrency}\r\n                currencyRate={currencyRate}\r\n                isBuying={isBuying}\r\n                amountOfBYN={amountOfBYN}\r\n                amountOfCurrency={amountOfCurrency}\r\n                changeCurrencyField={changeCurrencyField}\r\n                changeAction={changeAction}\r\n                changeCurrentCurrency={changeCurrentCurrency}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\n// const mapStateToProps = ( { currency } : {currency: CurrencyState} ): CurrencyState => {\r\n//     return {\r\n//         currencies: currency.currencies,\r\n//         currentCurrency: currency.currentCurrency,\r\n//         isBuying: currency.isBuying,\r\n//         amountOfBYN: currency.amountOfBYN,\r\n//         amountOfCurrency: currency.amountOfCurrency,\r\n//     };\r\n// };\r\n\r\n// const mapDispatchToProps = (dispatch: Dispatch<CurrencyReducersTypes>) : any => {\r\n//     return {\r\n//         setCurrencyAmount(amountOfBYN: string, amountOfCurrency: string) {\r\n//             dispatch(ChangeCurrencyFieldAC(amountOfBYN, amountOfCurrency));\r\n//         },\r\n//         setAction(isBuying: boolean) {\r\n//             dispatch(ChangeActionAC(isBuying));\r\n//         },\r\n//         changeCurrency(currency: string) {\r\n//             dispatch(ChangeCurrentCurrencyAC(currency));\r\n//         },\r\n//     };\r\n// };\r\n\r\n// const connector = connect(mapStateToProps, mapDispatchToProps);\r\n// const connector = connect(mapStateToProps, {\r\n//     ChangeActionAC,\r\n//     ChangeCurrencyFieldAC,\r\n//     ChangeCurrentCurrencyAC,\r\n// });\r\n// const connector = connect(mapStateToProps, {});\r\n//\r\n// type TProps = ConnectedProps<typeof connector>;\r\n//\r\n// export default connector(CurrencyEContainer);\r\n//\r\nexport default CurrencyEContainer;","/Users/rakanatoli/programing/it-incubator/JS Lessons/src/lessons/lesson1/lesson1.tsx",[],"/Users/rakanatoli/programing/it-incubator/JS Lessons/src/redux/actions.ts",[],"/Users/rakanatoli/programing/it-incubator/JS Lessons/src/index.tsx",[],"/Users/rakanatoli/programing/it-incubator/JS Lessons/src/components/CurrencyExchange/CurrencyExchange.tsx",[],"/Users/rakanatoli/programing/it-incubator/JS Lessons/src/App.tsx",["47"],"import React from 'react';\r\nimport './App.css';\r\nimport Lesson1 from './lessons/lesson1/lesson1';\r\n// import './lessons/lesson2/lesson2';\r\n// import Lesson3 from './lessons/lesson3/Lesson3';\r\n// import Lesson4 from './lessons/lesson4/Lesson4';\r\n// import './lessons/lesson5/lesson5';\r\n// import './lessons/lesson6/lesson6';\r\n// import './lessons/lesson7/lesson7';\r\n// import './lessons/lesson8/lesson8';\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {/*<Lesson2 />*/}\r\n            {/*<Lesson3 />*/}\r\n            {/*<Lesson4 />*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","/Users/rakanatoli/programing/it-incubator/JS Lessons/src/lessons/lesson3/Lesson3.tsx",["48","49"],"/Users/rakanatoli/programing/it-incubator/JS Lessons/src/lessons/lesson3/lesson_3.ts",["50"],{"ruleId":"51","severity":1,"message":"52","line":3,"column":9,"nodeType":"53","messageId":"54","endLine":3,"endColumn":22},{"ruleId":"51","severity":1,"message":"55","line":11,"column":9,"nodeType":"53","messageId":"54","endLine":11,"endColumn":16},{"ruleId":"51","severity":1,"message":"56","line":11,"column":18,"nodeType":"53","messageId":"54","endLine":11,"endColumn":32},{"ruleId":"51","severity":1,"message":"57","line":3,"column":8,"nodeType":"53","messageId":"54","endLine":3,"endColumn":15},{"ruleId":"51","severity":1,"message":"58","line":7,"column":26,"nodeType":"53","messageId":"54","endLine":7,"endColumn":41},{"ruleId":"51","severity":1,"message":"59","line":9,"column":32,"nodeType":"53","messageId":"54","endLine":9,"endColumn":53},{"ruleId":"60","severity":1,"message":"61","line":24,"column":1,"nodeType":"62","endLine":24,"endColumn":23},"@typescript-eslint/no-unused-vars","'CurrencyState' is defined but never used.","Identifier","unusedVar","'connect' is defined but never used.","'ConnectedProps' is defined but never used.","'Lesson1' is defined but never used.","'setSerachResult' is assigned a value but never used.","'setSerachResultByType' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration"]